function w(e){console.log("redirect"),window.location.href=e}function I(e){return new URLSearchParams(window.location.search).get(e)}const T={redirect:w,getQueryParameter:I};let o;const f=e=>localStorage.setItem("userId",e),n=()=>localStorage.getItem("userId"),p=e=>localStorage.setItem("userName",e),c=()=>localStorage.getItem("userName");function l(e){let r=0;const i=5,d=30*1e3,m=T.getQueryParameter("roomId"),u=n(),g=c(),S=window.location.protocol==="https:"?"wss":"ws";o=new WebSocket(`${S}://${window.location.host}/api/roomState?roomId=${m}&userId=${u}&userName=${g}`);const a=setTimeout(()=>{console.error("Failed to connect WS after 30 sec"),o.close(5e3,"Client 30 sec timeout")},d);let s;o.onopen=()=>{console.info("WS connected"),r=0,s=clearTimeout(a),setTimeout(()=>{console.log("ping"),o.send("H")},50*1e3)},o.onclose=t=>{clearTimeout(a),t.wasClean?console.error("WS closed normally"):(console.error("WS interrupted"),r<i?(console.log("Try connect again"),setTimeout(()=>l(e),++r*1e3)):(console.error("SYSTEM ERROR: Can't connect to server, achieved max count of attempts"),alert("SYSTEM ERROR: Can't connect to server"))),clearTimeout(s),console.debug(`WS error code ${t.code} and reason ${t.reason}`)},o.onerror=t=>{clearTimeout(s),console.error("WS error:"+t.message)},o.onmessage=t=>{console.debug("WS data",t.data),t.data==="H"?console.debug("heart-bit"):e(JSON.parse(t.data))}}const C=()=>o.send("flipCards"),N=()=>o.send("clearCards");function h(e){const r=n();o.send(JSON.stringify({vote:{userId:r,cardValue:e}}))}const R={attachWsToRoom:l,throwCard:h,flipCards:C,clearCards:N,setUserId:f,getUserId:n,setUserName:p,getUserName:c};export{R as r,T as u};
//# sourceMappingURL=room.service.28ac9eb1.js.map
