function g(e){console.log("redirect"),window.location.href=e}function w(e){return new URLSearchParams(window.location.search).get(e)}const I={redirect:g,getQueryParameter:w};let t;const f=e=>localStorage.setItem("userId",e),s=()=>localStorage.getItem("userId"),T=e=>localStorage.setItem("userName",e),a=()=>localStorage.getItem("userName");function c(e){let r=0;const l=5,d=30*1e3,i=I.getQueryParameter("roomId"),m=s(),u=a(),S=window.location.protocol==="https:"?"wss":"ws";t=new WebSocket(`${S}://${window.location.host}/api/roomState?roomId=${i}&userId=${m}&userName=${u}`);const n=setTimeout(()=>{console.error("Failed to connect WS after 30 sec"),t.close(5e3,"Client 30 sec timeout")},d);t.onopen=()=>{console.info("WS connected"),r=0,clearTimeout(n)},t.onclose=o=>{clearTimeout(n),o.wasClean?console.error("WS closed normally"):(console.error("WS interrupted"),r<l?(console.log("Try connect again"),setTimeout(()=>c(e),++r*1e3)):(console.error("SYSTEM ERROR: Can't connect to server, achieved max count of attempts"),alert("SYSTEM ERROR: Can't connect to server"))),console.debug(`WS error code ${o.code} and reason ${o.reason}`)},t.onerror=o=>console.error("WS error:"+o.message),t.onmessage=o=>{console.debug("WS data",o.data),o.data==="H"?console.debug("heart-bit"):e(JSON.parse(o.data))}}const p=()=>t.send("flipCards"),C=()=>t.send("clearCards");function N(e){const r=s();t.send(JSON.stringify({vote:{userId:r,cardValue:e}}))}const h={attachWsToRoom:c,throwCard:N,flipCards:p,clearCards:C,setUserId:f,getUserId:s,setUserName:T,getUserName:a};export{h as r,I as u};
