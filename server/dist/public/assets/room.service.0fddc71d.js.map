{"version":3,"file":"room.service.0fddc71d.js","sources":["../../src/utils.ts","../../src/modules/room/room.service.ts"],"sourcesContent":["function redirect(relativeUrl: string): void {\r\n    console.log(\"redirect\")\r\n    window.location.href = relativeUrl;\r\n}\r\n\r\nfunction getQueryParameter(name: string): string | null {\r\n    const params = new URLSearchParams(window.location.search);\r\n    return params.get(name);\r\n}\r\n\r\nconst utils = {\r\n    redirect,\r\n    getQueryParameter\r\n}\r\n\r\nexport default utils;\r\n\r\nexport type JsMap<K extends string, V> = { [key in K]: V; };\r\n","import utils from \"@/utils\";\r\nimport type {Room} from \"@/modules/room/room.model\";\r\n\r\nlet ws: WebSocket;\r\n\r\nconst setUserId = (userId: string): void => localStorage.setItem(\"userId\", userId);\r\nconst getUserId = (): string | null => localStorage.getItem(\"userId\");\r\nconst setUserName = (userName: string): void => localStorage.setItem(\"userName\", userName);\r\nconst getUserName = (): string | null => localStorage.getItem(\"userName\");\r\n\r\nfunction attachWsToRoom(callback: (data: Room) => void) {\r\n    let wsTry = 0;\r\n    const MAX_TRIES = 5;\r\n    const CONNECTION_TIMEOUT = 30 * 1000;\r\n\r\n    const roomId = utils.getQueryParameter('roomId');\r\n    const userId = getUserId();\r\n    const userName = getUserName();\r\n    const wsProtocol = window.location.protocol === \"https:\" ? \"wss\" : \"ws\";\r\n    ws = new WebSocket(`${wsProtocol}://${window.location.host}/api/roomState?roomId=${roomId}&userId=${userId}&userName=${userName}`);\r\n\r\n    const wsConnectionTimeoutId = setTimeout(() => {\r\n        console.error(\"Failed to connect WS after 30 sec\");\r\n        ws.close(5000, \"Client 30 sec timeout\");\r\n    }, CONNECTION_TIMEOUT);\r\n\r\n    ws.onopen = () => {\r\n        console.info(\"WS connected\");\r\n        wsTry = 0;\r\n        clearTimeout(wsConnectionTimeoutId);\r\n    };\r\n\r\n    ws.onclose = (event: CloseEvent) => {\r\n        clearTimeout(wsConnectionTimeoutId);\r\n        if (event.wasClean) {\r\n            console.error('WS closed normally');\r\n        } else {\r\n            console.error('WS interrupted');\r\n            if (wsTry < MAX_TRIES) {\r\n                console.log('Try connect again');\r\n                setTimeout(() => attachWsToRoom(callback), ++wsTry * 1000);\r\n            } else {\r\n                console.error(\"SYSTEM ERROR: Can't connect to server, achieved max count of attempts\");\r\n                alert(\"SYSTEM ERROR: Can't connect to server\");\r\n            }\r\n        }\r\n        console.debug(`WS error code ${event.code} and reason ${event.reason}`);\r\n    };\r\n\r\n    ws.onerror = (error: any) => console.error(\"WS error:\" + error.message);\r\n\r\n    ws.onmessage = (event: MessageEvent) => {\r\n        console.debug(\"WS data\", event.data);\r\n        if (event.data === \"H\") {\r\n            console.debug(\"heart-bit\");\r\n        } else {\r\n            callback(JSON.parse(event.data));\r\n        }\r\n    };\r\n}\r\n\r\nconst flipCards = () => ws.send(\"flipCards\");\r\n\r\nconst clearCards = () => ws.send(\"clearCards\");\r\n\r\nfunction throwCard(cardValue: number | string) {\r\n    const userId = getUserId();\r\n    ws.send(JSON.stringify({vote: {userId, cardValue}}));\r\n}\r\n\r\nexport const roomService = {\r\n    attachWsToRoom,\r\n    throwCard,\r\n    flipCards,\r\n    clearCards,\r\n    setUserId,\r\n    getUserId,\r\n    setUserName,\r\n    getUserName,\r\n}\r\n"],"names":["redirect","relativeUrl","getQueryParameter","name","utils","ws","setUserId","userId","getUserId","setUserName","userName","getUserName","attachWsToRoom","callback","wsTry","MAX_TRIES","CONNECTION_TIMEOUT","roomId","wsProtocol","wsConnectionTimeoutId","event","error","flipCards","clearCards","throwCard","cardValue","roomService"],"mappings":"AAAA,SAASA,EAASC,EAA2B,CACzC,QAAQ,IAAI,UAAU,EACtB,OAAO,SAAS,KAAOA,CAC3B,CAEA,SAASC,EAAkBC,EAA6B,CAE7C,OADQ,IAAI,gBAAgB,OAAO,SAAS,MAAM,EAC3C,IAAIA,CAAI,CAC1B,CAEA,MAAMC,EAAQ,CACV,SAAAJ,EACA,kBAAAE,CACJ,ECVA,IAAIG,EAEJ,MAAMC,EAAaC,GAAyB,aAAa,QAAQ,SAAUA,CAAM,EAC3EC,EAAY,IAAqB,aAAa,QAAQ,QAAQ,EAC9DC,EAAeC,GAA2B,aAAa,QAAQ,WAAYA,CAAQ,EACnFC,EAAc,IAAqB,aAAa,QAAQ,UAAU,EAExE,SAASC,EAAeC,EAAgC,CACpD,IAAIC,EAAQ,EACZ,MAAMC,EAAY,EACZC,EAAqB,GAAK,IAE1BC,EAASb,EAAM,kBAAkB,QAAQ,EACzCG,EAASC,IACTE,EAAWC,IACXO,EAAa,OAAO,SAAS,WAAa,SAAW,MAAQ,KAC9Db,EAAA,IAAI,UAAU,GAAGa,OAAgB,OAAO,SAAS,6BAA6BD,YAAiBV,cAAmBG,GAAU,EAE3H,MAAAS,EAAwB,WAAW,IAAM,CAC3C,QAAQ,MAAM,mCAAmC,EAC9Cd,EAAA,MAAM,IAAM,uBAAuB,GACvCW,CAAkB,EAErBX,EAAG,OAAS,IAAM,CACd,QAAQ,KAAK,cAAc,EACnBS,EAAA,EACR,aAAaK,CAAqB,CAAA,EAGnCd,EAAA,QAAWe,GAAsB,CAChC,aAAaD,CAAqB,EAC9BC,EAAM,SACN,QAAQ,MAAM,oBAAoB,GAElC,QAAQ,MAAM,gBAAgB,EAC1BN,EAAQC,GACR,QAAQ,IAAI,mBAAmB,EAC/B,WAAW,IAAMH,EAAeC,CAAQ,EAAG,EAAEC,EAAQ,GAAI,IAEzD,QAAQ,MAAM,uEAAuE,EACrF,MAAM,uCAAuC,IAGrD,QAAQ,MAAM,iBAAiBM,EAAM,mBAAmBA,EAAM,QAAQ,CAAA,EAG1Ef,EAAG,QAAWgB,GAAe,QAAQ,MAAM,YAAcA,EAAM,OAAO,EAEnEhB,EAAA,UAAae,GAAwB,CAC5B,QAAA,MAAM,UAAWA,EAAM,IAAI,EAC/BA,EAAM,OAAS,IACf,QAAQ,MAAM,WAAW,EAEzBP,EAAS,KAAK,MAAMO,EAAM,IAAI,CAAC,CACnC,CAER,CAEA,MAAME,EAAY,IAAMjB,EAAG,KAAK,WAAW,EAErCkB,EAAa,IAAMlB,EAAG,KAAK,YAAY,EAE7C,SAASmB,EAAUC,EAA4B,CAC3C,MAAMlB,EAASC,IACZH,EAAA,KAAK,KAAK,UAAU,CAAC,KAAM,CAAC,OAAAE,EAAQ,UAAAkB,EAAW,CAAA,CAAC,CACvD,CAEO,MAAMC,EAAc,CACvB,eAAAd,EACA,UAAAY,EACA,UAAAF,EACA,WAAAC,EACA,UAAAjB,EACA,UAAAE,EACA,YAAAC,EACA,YAAAE,CACJ"}