{"version":3,"file":"RoomView.97cbbb55.js","sources":["../../src/modules/room/components/card/Card.vue","../../src/modules/room/components/card/Card.vue","../../src/modules/room/components/user/User.vue","../../src/modules/room/components/user/User.vue","../../src/modules/room/components/scoreboard/ScoreBoard.vue","../../src/modules/room/components/scoreboard/ScoreBoard.vue","../../src/modules/room/components/table/Table.vue","../../src/modules/room/components/table/Table.vue","../../src/modules/room/components/CardBoard.vue","../../src/modules/room/components/CardBoard.vue","../../src/modules/room/Room.vue","../../src/modules/room/Room.vue"],"sourcesContent":["<script lang=\"ts\">\r\n\r\nimport {defineComponent} from \"vue\";\r\n\r\nexport default defineComponent({\r\n  props: [\r\n    \"cardShirt\", \"rotateAngle\", \"value\", \"displayText\", \"nonVisible\",\r\n    \"showAnimation\", \"flipCardAnimation\"\r\n  ],\r\n\r\n  data: function() {\r\n    return {\r\n      showAnimationState: this.showAnimation\r\n    }\r\n  },\r\n\r\n  watch: {\r\n    value: function (newValue, oldValue) {\r\n      if (newValue != oldValue) {\r\n        const animationClass = this.showAnimationState === 'UP' ? \"_run-transformation-up\" : \"_run-transformation-down\"\r\n        const element = this.$el;\r\n        //https://css-tricks.com/restart-css-animation/\r\n        element.classList.remove(animationClass);\r\n        void element.offsetWidth; // triggering reflow \"The actual magic\"\r\n        element.classList.add(animationClass);\r\n      }\r\n    }\r\n  },\r\n\r\n  mounted() {\r\n    console.debug(\"mount\");\r\n  }\r\n})\r\n\r\n</script>\r\n\r\n\r\n<template>\r\n  <div class=\"card-container\"\r\n       :class=\"{\r\n    '_run-transformation-up': this.showAnimationState === 'UP',\r\n    '_run-transformation-down': this.showAnimationState === 'DOWN',\r\n    '_run-flip-animation': flipCardAnimation\r\n  }\">\r\n    <div class=\"card\"\r\n         :class=\"{ '_card-shirt': cardShirt, '_non-visible': nonVisible }\"\r\n         :style=\"{ 'transform': `rotate(${rotateAngle}deg)`}\">\r\n      <span>{{ cardShirt ? \"\" : displayText }}</span>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\n\r\n.card {\r\n  height: 150px;\r\n  width: 100px;\r\n  margin: 10px;\r\n  text-align: center;\r\n  /*font-size: 25px;*/\r\n  background-size: 100% 100%;\r\n  background-image: url(\"card.jpg\");\r\n  vertical-align: middle;\r\n  justify-content: center;\r\n  align-items: center;\r\n  display: flex;\r\n}\r\n\r\n.card > span {\r\n  color: coral;\r\n  font-size: 70px;\r\n  font-weight: bold;\r\n}\r\n\r\n.card._card-shirt {\r\n  background-size: 100% 100%;\r\n  background-image: url(\"card-back.png\");\r\n}\r\n\r\n.card._non-visible {\r\n  visibility: hidden;\r\n}\r\n\r\n._run-transformation-up {\r\n  position: relative;\r\n  animation: _transformation-up-animation 1s ease-in;\r\n}\r\n\r\n@keyframes _transformation-up-animation {\r\n  from {\r\n    opacity: 0;\r\n    top: 10vh;\r\n    /*transform: rotate(0deg);*/\r\n  }\r\n  to {\r\n    opacity: 1;\r\n    top: 0;\r\n    /*transform: rotate(5000deg);*/\r\n  }\r\n}\r\n\r\n._run-transformation-down {\r\n  position: relative;\r\n  animation: _transformation-down-animation 1s ease-in;\r\n}\r\n\r\n@keyframes _transformation-down-animation {\r\n  from {\r\n    opacity: 0;\r\n    top: -10vh;\r\n  }\r\n  to {\r\n    opacity: 1;\r\n    top: 0;\r\n  }\r\n}\r\n\r\n._run-flip-animation {\r\n  animation: _flip-animation 1s ease-in;\r\n}\r\n\r\n@keyframes _flip-animation {\r\n  from {\r\n    transform: rotate(0deg);\r\n  }\r\n  to {\r\n    transform: rotate(5000deg);\r\n  }\r\n}\r\n\r\n</style>\r\n","<script lang=\"ts\">\r\n\r\nimport {defineComponent} from \"vue\";\r\n\r\nexport default defineComponent({\r\n  props: [\r\n    \"cardShirt\", \"rotateAngle\", \"value\", \"displayText\", \"nonVisible\",\r\n    \"showAnimation\", \"flipCardAnimation\"\r\n  ],\r\n\r\n  data: function() {\r\n    return {\r\n      showAnimationState: this.showAnimation\r\n    }\r\n  },\r\n\r\n  watch: {\r\n    value: function (newValue, oldValue) {\r\n      if (newValue != oldValue) {\r\n        const animationClass = this.showAnimationState === 'UP' ? \"_run-transformation-up\" : \"_run-transformation-down\"\r\n        const element = this.$el;\r\n        //https://css-tricks.com/restart-css-animation/\r\n        element.classList.remove(animationClass);\r\n        void element.offsetWidth; // triggering reflow \"The actual magic\"\r\n        element.classList.add(animationClass);\r\n      }\r\n    }\r\n  },\r\n\r\n  mounted() {\r\n    console.debug(\"mount\");\r\n  }\r\n})\r\n\r\n</script>\r\n\r\n\r\n<template>\r\n  <div class=\"card-container\"\r\n       :class=\"{\r\n    '_run-transformation-up': this.showAnimationState === 'UP',\r\n    '_run-transformation-down': this.showAnimationState === 'DOWN',\r\n    '_run-flip-animation': flipCardAnimation\r\n  }\">\r\n    <div class=\"card\"\r\n         :class=\"{ '_card-shirt': cardShirt, '_non-visible': nonVisible }\"\r\n         :style=\"{ 'transform': `rotate(${rotateAngle}deg)`}\">\r\n      <span>{{ cardShirt ? \"\" : displayText }}</span>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\n\r\n.card {\r\n  height: 150px;\r\n  width: 100px;\r\n  margin: 10px;\r\n  text-align: center;\r\n  /*font-size: 25px;*/\r\n  background-size: 100% 100%;\r\n  background-image: url(\"card.jpg\");\r\n  vertical-align: middle;\r\n  justify-content: center;\r\n  align-items: center;\r\n  display: flex;\r\n}\r\n\r\n.card > span {\r\n  color: coral;\r\n  font-size: 70px;\r\n  font-weight: bold;\r\n}\r\n\r\n.card._card-shirt {\r\n  background-size: 100% 100%;\r\n  background-image: url(\"card-back.png\");\r\n}\r\n\r\n.card._non-visible {\r\n  visibility: hidden;\r\n}\r\n\r\n._run-transformation-up {\r\n  position: relative;\r\n  animation: _transformation-up-animation 1s ease-in;\r\n}\r\n\r\n@keyframes _transformation-up-animation {\r\n  from {\r\n    opacity: 0;\r\n    top: 10vh;\r\n    /*transform: rotate(0deg);*/\r\n  }\r\n  to {\r\n    opacity: 1;\r\n    top: 0;\r\n    /*transform: rotate(5000deg);*/\r\n  }\r\n}\r\n\r\n._run-transformation-down {\r\n  position: relative;\r\n  animation: _transformation-down-animation 1s ease-in;\r\n}\r\n\r\n@keyframes _transformation-down-animation {\r\n  from {\r\n    opacity: 0;\r\n    top: -10vh;\r\n  }\r\n  to {\r\n    opacity: 1;\r\n    top: 0;\r\n  }\r\n}\r\n\r\n._run-flip-animation {\r\n  animation: _flip-animation 1s ease-in;\r\n}\r\n\r\n@keyframes _flip-animation {\r\n  from {\r\n    transform: rotate(0deg);\r\n  }\r\n  to {\r\n    transform: rotate(5000deg);\r\n  }\r\n}\r\n\r\n</style>\r\n","<script lang=\"ts\">\r\n\r\nimport {defineComponent} from \"vue\";\r\n\r\nexport default defineComponent({\r\n  props: [\"userName\", \"display\", \"displayName\", \"order\"]\r\n})\r\n\r\n</script>\r\n\r\n\r\n<template>\r\n  <div class=\"user-container\" :class=\"{'user-in-line': display === 'line'}\">\r\n    <div v-if=\"displayName === 'up'\">{{ userName }}</div>\r\n    <div class=\"user\" :style=\"{ 'background-image': `icons/u${order}.png`}\"></div>\r\n    <div v-if=\"displayName === 'down' || display === 'line'\">{{ userName }}</div>\r\n  </div>\r\n</template>\r\n\r\n\r\n<style scoped>\r\n\r\n.user-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n}\r\n\r\n.user {\r\n  height: 65px;\r\n  width: 65px;\r\n  background-image: url(\"icons/u1.png\");\r\n  background-size: 100% 100%;\r\n}\r\n\r\n.user-in-line {\r\n  flex-direction: row;\r\n  align-items: stretch;\r\n}\r\n\r\n.user-in-line > .user {\r\n  margin: 0 1px 0 0;\r\n  height: 35px;\r\n  width: 35px;\r\n}\r\n\r\n</style>\r\n","<script lang=\"ts\">\r\n\r\nimport {defineComponent} from \"vue\";\r\n\r\nexport default defineComponent({\r\n  props: [\"userName\", \"display\", \"displayName\", \"order\"]\r\n})\r\n\r\n</script>\r\n\r\n\r\n<template>\r\n  <div class=\"user-container\" :class=\"{'user-in-line': display === 'line'}\">\r\n    <div v-if=\"displayName === 'up'\">{{ userName }}</div>\r\n    <div class=\"user\" :style=\"{ 'background-image': `icons/u${order}.png`}\"></div>\r\n    <div v-if=\"displayName === 'down' || display === 'line'\">{{ userName }}</div>\r\n  </div>\r\n</template>\r\n\r\n\r\n<style scoped>\r\n\r\n.user-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n}\r\n\r\n.user {\r\n  height: 65px;\r\n  width: 65px;\r\n  background-image: url(\"icons/u1.png\");\r\n  background-size: 100% 100%;\r\n}\r\n\r\n.user-in-line {\r\n  flex-direction: row;\r\n  align-items: stretch;\r\n}\r\n\r\n.user-in-line > .user {\r\n  margin: 0 1px 0 0;\r\n  height: 35px;\r\n  width: 35px;\r\n}\r\n\r\n</style>\r\n","<script lang=\"ts\">\r\n\r\nimport {defineComponent} from \"vue\";\r\nimport User from \"@/modules/room/components/user/User.vue\";\r\nimport type {Vote} from \"@/modules/room/room.model\";\r\n\r\nexport default defineComponent({\r\n  components: {User},\r\n  emits: [\"clearCards\", \"flipCards\"],\r\n  props: {\r\n    votes: {type: Array, default: []},\r\n    showCards: {type: Boolean, default: false}\r\n  },\r\n\r\n  methods: {\r\n    cardValueDisplay: function (vote: Vote) {\r\n      if (this.showCards) {\r\n        return vote.cardValue || \"no card\";\r\n      } else {\r\n        if (vote.cardValue) {\r\n          return \"??\";\r\n        } else {\r\n          return \"waiting\"\r\n        }\r\n      }\r\n    }\r\n  },\r\n\r\n  computed: {\r\n    average: function () {\r\n      const tmp = this.votes.filter((vote: any) => typeof vote.cardValue === \"number\");\r\n      let average: number = tmp.reduce((acc: number, vote: any) => acc + vote.cardValue, 0);\r\n      average = average / tmp.length;\r\n      return average;\r\n    }\r\n  }\r\n})\r\n\r\n</script>\r\n\r\n\r\n<template>\r\n  <div class=\"scoreboard\">\r\n    <button @click=\"this.$emit('clearCards')\">Clear cards</button>\r\n    <button @click=\"this.$emit('flipCards')\">Flip cards</button>\r\n    <div>Average: {{ showCards ? average : \"??\" }}</div>\r\n    <div>\r\n      <div class=\"scoreboard__user-line\" v-for=\"(vote, index) in votes\">\r\n        <span><User :user-name=\"vote.userName\" :display=\"'line'\" :order=\"index\"></User></span>\r\n        <span>:&nbsp;</span>\r\n        <span>{{ cardValueDisplay(vote) }}</span>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\n\r\n.scoreboard {\r\n  box-sizing: border-box;\r\n  display: flex;\r\n  flex-direction: column;\r\n  /*position: absolute;*/\r\n  right: 0;\r\n  height: 100%;\r\n  width: 100%;\r\n  border: 1px solid black;\r\n  background-color: #b5b7ee;\r\n}\r\n\r\n.scoreboard > div, .scoreboard > button {\r\n  margin: 5px;\r\n  font-size: 20px;\r\n  /*background-color: limegreen;*/\r\n  /*color: white;*/\r\n}\r\n\r\n.scoreboard__user-line {\r\n  display: flex;\r\n  flex-direction: row;\r\n}\r\n\r\n</style>\r\n","<script lang=\"ts\">\r\n\r\nimport {defineComponent} from \"vue\";\r\nimport User from \"@/modules/room/components/user/User.vue\";\r\nimport type {Vote} from \"@/modules/room/room.model\";\r\n\r\nexport default defineComponent({\r\n  components: {User},\r\n  emits: [\"clearCards\", \"flipCards\"],\r\n  props: {\r\n    votes: {type: Array, default: []},\r\n    showCards: {type: Boolean, default: false}\r\n  },\r\n\r\n  methods: {\r\n    cardValueDisplay: function (vote: Vote) {\r\n      if (this.showCards) {\r\n        return vote.cardValue || \"no card\";\r\n      } else {\r\n        if (vote.cardValue) {\r\n          return \"??\";\r\n        } else {\r\n          return \"waiting\"\r\n        }\r\n      }\r\n    }\r\n  },\r\n\r\n  computed: {\r\n    average: function () {\r\n      const tmp = this.votes.filter((vote: any) => typeof vote.cardValue === \"number\");\r\n      let average: number = tmp.reduce((acc: number, vote: any) => acc + vote.cardValue, 0);\r\n      average = average / tmp.length;\r\n      return average;\r\n    }\r\n  }\r\n})\r\n\r\n</script>\r\n\r\n\r\n<template>\r\n  <div class=\"scoreboard\">\r\n    <button @click=\"this.$emit('clearCards')\">Clear cards</button>\r\n    <button @click=\"this.$emit('flipCards')\">Flip cards</button>\r\n    <div>Average: {{ showCards ? average : \"??\" }}</div>\r\n    <div>\r\n      <div class=\"scoreboard__user-line\" v-for=\"(vote, index) in votes\">\r\n        <span><User :user-name=\"vote.userName\" :display=\"'line'\" :order=\"index\"></User></span>\r\n        <span>:&nbsp;</span>\r\n        <span>{{ cardValueDisplay(vote) }}</span>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\n\r\n.scoreboard {\r\n  box-sizing: border-box;\r\n  display: flex;\r\n  flex-direction: column;\r\n  /*position: absolute;*/\r\n  right: 0;\r\n  height: 100%;\r\n  width: 100%;\r\n  border: 1px solid black;\r\n  background-color: #b5b7ee;\r\n}\r\n\r\n.scoreboard > div, .scoreboard > button {\r\n  margin: 5px;\r\n  font-size: 20px;\r\n  /*background-color: limegreen;*/\r\n  /*color: white;*/\r\n}\r\n\r\n.scoreboard__user-line {\r\n  display: flex;\r\n  flex-direction: row;\r\n}\r\n\r\n</style>\r\n","<script lang=\"ts\">\r\n\r\nimport {defineComponent} from \"vue\";\r\nimport Card from \"@/modules/room/components/card/Card.vue\";\r\nimport User from \"@/modules/room/components/user/User.vue\";\r\n\r\nexport default defineComponent({\r\n  components: {Card, User},\r\n  props: {\r\n    votes: {type: Array, default: []},\r\n    showCards: {type: Boolean, default: false}\r\n  },\r\n\r\n  data() {\r\n    return {}\r\n  },\r\n\r\n  computed: {\r\n    voteUp: function () {\r\n      const tmp = this.votes.filter((el: any, i: number) => i % 2 === 0);\r\n      return tmp;\r\n    },\r\n    voteDown: function () {\r\n      const tmp = this.votes.filter((el: any, i: number) => i % 2 !== 0);\r\n      return tmp;\r\n    }\r\n  }\r\n})\r\n\r\n</script>\r\n\r\n\r\n<template>\r\n\r\n  <div class=\"table-container\">\r\n\r\n    <div class=\"table-bench\" id=\"bench-up\">\r\n      <User v-for=\"vote in voteUp\" :userName=\"vote.userName\" :display-name=\"'up'\"></User>\r\n    </div>\r\n\r\n    <div class=\"table\">\r\n      <div class=\"table__left\"></div>\r\n      <div class=\"table__middle\">\r\n        <div class=\"table__middle-up\">\r\n          <Card v-for=\"vote in voteUp\"\r\n                :value=\"vote.cardValue\"\r\n                :display-text=\"vote.cardValue\"\r\n                :rotateAngle=\"vote.rotateAngle\"\r\n                :cardShirt=\"!showCards\"\r\n                :non-visible=\"vote.cardValue == null\"\r\n                :show-animation=\"'DOWN'\"\r\n          ></Card>\r\n        </div>\r\n        <div class=\"table__middle-down\">\r\n          <Card v-for=\"vote in voteDown\"\r\n                :value=\"vote.cardValue\"\r\n                :display-text=\"vote.cardValue\"\r\n                :rotateAngle=\"vote.rotateAngle\"\r\n                :cardShirt=\"!showCards\"\r\n                :non-visible=\"vote.cardValue == null\"\r\n                :show-animation=\"'UP'\"\r\n          ></Card>\r\n        </div>\r\n      </div>\r\n      <div class=\"table__right\"></div>\r\n    </div>\r\n\r\n    <div class=\"table-bench\" id=\"bench-down\">\r\n      <User v-for=\"vote in voteDown\" :userName=\"vote.userName\" :display-name=\"'down'\"></User>\r\n    </div>\r\n\r\n  </div>\r\n\r\n</template>\r\n\r\n<style scoped>\r\n\r\n.table-container {\r\n  border: 1px solid black;\r\n  background-color: beige;\r\n  border-radius: 30px;\r\n  height: calc(100% - 2px);\r\n}\r\n\r\n.table {\r\n  margin: 5px 10px;\r\n  display: flex;\r\n  justify-content: space-around;\r\n}\r\n\r\n.table-bench {\r\n  display: flex;\r\n  height: 80px;\r\n  margin: 0 190px 0 260px;\r\n\r\n  justify-content: space-around;\r\n  align-items: center;\r\n}\r\n\r\n.table {\r\n  position: relative;\r\n  display: flex;\r\n  justify-content: space-between;\r\n}\r\n\r\n.table__left {\r\n  background-image: url(\"table-left.png\");\r\n  background-size: 100% 100%;\r\n  width: 260px;\r\n  height: 400px;\r\n}\r\n\r\n.table__middle {\r\n  background-image: url(\"table-middle.png\");\r\n  background-size: 100% 100%;\r\n  width: calc(100% - 450px);\r\n  height: 400px;\r\n}\r\n\r\n.table__middle-up, .table__middle-down {\r\n  height: 50%;\r\n  display: flex;\r\n\r\n  justify-content: space-around;\r\n  align-items: center;\r\n}\r\n\r\n.table__right {\r\n  background-image: url(\"table-right.png\");\r\n  background-size: 100% 100%;\r\n  width: 190px;\r\n  height: 400px;\r\n}\r\n\r\n</style>\r\n","<script lang=\"ts\">\r\n\r\nimport {defineComponent} from \"vue\";\r\nimport Card from \"@/modules/room/components/card/Card.vue\";\r\nimport User from \"@/modules/room/components/user/User.vue\";\r\n\r\nexport default defineComponent({\r\n  components: {Card, User},\r\n  props: {\r\n    votes: {type: Array, default: []},\r\n    showCards: {type: Boolean, default: false}\r\n  },\r\n\r\n  data() {\r\n    return {}\r\n  },\r\n\r\n  computed: {\r\n    voteUp: function () {\r\n      const tmp = this.votes.filter((el: any, i: number) => i % 2 === 0);\r\n      return tmp;\r\n    },\r\n    voteDown: function () {\r\n      const tmp = this.votes.filter((el: any, i: number) => i % 2 !== 0);\r\n      return tmp;\r\n    }\r\n  }\r\n})\r\n\r\n</script>\r\n\r\n\r\n<template>\r\n\r\n  <div class=\"table-container\">\r\n\r\n    <div class=\"table-bench\" id=\"bench-up\">\r\n      <User v-for=\"vote in voteUp\" :userName=\"vote.userName\" :display-name=\"'up'\"></User>\r\n    </div>\r\n\r\n    <div class=\"table\">\r\n      <div class=\"table__left\"></div>\r\n      <div class=\"table__middle\">\r\n        <div class=\"table__middle-up\">\r\n          <Card v-for=\"vote in voteUp\"\r\n                :value=\"vote.cardValue\"\r\n                :display-text=\"vote.cardValue\"\r\n                :rotateAngle=\"vote.rotateAngle\"\r\n                :cardShirt=\"!showCards\"\r\n                :non-visible=\"vote.cardValue == null\"\r\n                :show-animation=\"'DOWN'\"\r\n          ></Card>\r\n        </div>\r\n        <div class=\"table__middle-down\">\r\n          <Card v-for=\"vote in voteDown\"\r\n                :value=\"vote.cardValue\"\r\n                :display-text=\"vote.cardValue\"\r\n                :rotateAngle=\"vote.rotateAngle\"\r\n                :cardShirt=\"!showCards\"\r\n                :non-visible=\"vote.cardValue == null\"\r\n                :show-animation=\"'UP'\"\r\n          ></Card>\r\n        </div>\r\n      </div>\r\n      <div class=\"table__right\"></div>\r\n    </div>\r\n\r\n    <div class=\"table-bench\" id=\"bench-down\">\r\n      <User v-for=\"vote in voteDown\" :userName=\"vote.userName\" :display-name=\"'down'\"></User>\r\n    </div>\r\n\r\n  </div>\r\n\r\n</template>\r\n\r\n<style scoped>\r\n\r\n.table-container {\r\n  border: 1px solid black;\r\n  background-color: beige;\r\n  border-radius: 30px;\r\n  height: calc(100% - 2px);\r\n}\r\n\r\n.table {\r\n  margin: 5px 10px;\r\n  display: flex;\r\n  justify-content: space-around;\r\n}\r\n\r\n.table-bench {\r\n  display: flex;\r\n  height: 80px;\r\n  margin: 0 190px 0 260px;\r\n\r\n  justify-content: space-around;\r\n  align-items: center;\r\n}\r\n\r\n.table {\r\n  position: relative;\r\n  display: flex;\r\n  justify-content: space-between;\r\n}\r\n\r\n.table__left {\r\n  background-image: url(\"table-left.png\");\r\n  background-size: 100% 100%;\r\n  width: 260px;\r\n  height: 400px;\r\n}\r\n\r\n.table__middle {\r\n  background-image: url(\"table-middle.png\");\r\n  background-size: 100% 100%;\r\n  width: calc(100% - 450px);\r\n  height: 400px;\r\n}\r\n\r\n.table__middle-up, .table__middle-down {\r\n  height: 50%;\r\n  display: flex;\r\n\r\n  justify-content: space-around;\r\n  align-items: center;\r\n}\r\n\r\n.table__right {\r\n  background-image: url(\"table-right.png\");\r\n  background-size: 100% 100%;\r\n  width: 190px;\r\n  height: 400px;\r\n}\r\n\r\n</style>\r\n","<script lang=\"ts\">\r\n\r\nimport {defineComponent} from \"vue\";\r\nimport Card from \"@/modules/room/components/card/Card.vue\";\r\n\r\nlet avCards = [\r\n  0, {value: 0.5, displayText: \"1/2\"},\r\n  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 15, 30, \"?\"\r\n];\r\navCards = avCards.map((el: any) => {\r\n  if (el.value) {\r\n    return el;\r\n  } else {\r\n    return {value: el, displayText: el};\r\n  }\r\n})\r\n\r\nexport default defineComponent({\r\n  components: {Card},\r\n  emits: [\"throwCard\"],\r\n  data() {\r\n    return {avCards}\r\n  }\r\n})\r\n\r\n</script>\r\n\r\n\r\n<template>\r\n  <div class=\"card-board\">\r\n    <button class=\"card\" v-for=\"card in avCards\" @click=\"this.$emit('throwCard', card.value)\">\r\n      <Card :value=\"card.value\" :displayText=\"card.displayText\"></Card>\r\n    </button>\r\n  </div>\r\n</template>\r\n\r\n\r\n<style scoped>\r\n\r\n.card-board {\r\n  /*height: 60%;*/\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n.card-board > .card {\r\n  /*height: calc(50% - 2px);*/\r\n  width: calc(12% - 1px);\r\n  margin: 1px;\r\n  border: 0;\r\n  padding: 0;\r\n  background-color: transparent;\r\n}\r\n\r\n.card-board > .card:hover {\r\n  opacity: 50%;\r\n}\r\n\r\n</style>\r\n","<script lang=\"ts\">\r\n\r\nimport {defineComponent} from \"vue\";\r\nimport Card from \"@/modules/room/components/card/Card.vue\";\r\n\r\nlet avCards = [\r\n  0, {value: 0.5, displayText: \"1/2\"},\r\n  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 15, 30, \"?\"\r\n];\r\navCards = avCards.map((el: any) => {\r\n  if (el.value) {\r\n    return el;\r\n  } else {\r\n    return {value: el, displayText: el};\r\n  }\r\n})\r\n\r\nexport default defineComponent({\r\n  components: {Card},\r\n  emits: [\"throwCard\"],\r\n  data() {\r\n    return {avCards}\r\n  }\r\n})\r\n\r\n</script>\r\n\r\n\r\n<template>\r\n  <div class=\"card-board\">\r\n    <button class=\"card\" v-for=\"card in avCards\" @click=\"this.$emit('throwCard', card.value)\">\r\n      <Card :value=\"card.value\" :displayText=\"card.displayText\"></Card>\r\n    </button>\r\n  </div>\r\n</template>\r\n\r\n\r\n<style scoped>\r\n\r\n.card-board {\r\n  /*height: 60%;*/\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n.card-board > .card {\r\n  /*height: calc(50% - 2px);*/\r\n  width: calc(12% - 1px);\r\n  margin: 1px;\r\n  border: 0;\r\n  padding: 0;\r\n  background-color: transparent;\r\n}\r\n\r\n.card-board > .card:hover {\r\n  opacity: 50%;\r\n}\r\n\r\n</style>\r\n","<script lang=\"ts\">\r\n\r\nimport {defineComponent} from \"vue\";\r\nimport Card from \"@/modules/room/components/card/Card.vue\";\r\nimport {roomService} from \"@/modules/room/room.service\";\r\nimport ScoreBoard from \"@/modules/room/components/scoreboard/ScoreBoard.vue\";\r\nimport Table from \"@/modules/room/components/table/Table.vue\";\r\nimport CardBoard from \"@/modules/room/components/CardBoard.vue\";\r\nimport type {Room} from \"@/modules/room/room.model\";\r\nimport type {Vote} from \"@/modules/room/room.model\";\r\nimport router from \"@/views/router\";\r\nimport utils from \"@/utils\";\r\n\r\nexport default defineComponent({\r\n  components: {CardBoard, Table, ScoreBoard, Card},\r\n\r\n  data() {\r\n    return {\r\n      votes: [] as Vote[],\r\n      showCards: false,\r\n    }\r\n  },\r\n\r\n  methods: {\r\n    throwCard: function (cardValue: number | string) {\r\n      roomService.throwCard(cardValue);\r\n    },\r\n    clearCards: function () {\r\n      roomService.clearCards();\r\n    },\r\n    flipCards: function () {\r\n      roomService.flipCards();\r\n    }\r\n  },\r\n\r\n  mounted(): void {\r\n    const userName = roomService.getUserName();\r\n    if (!userName) {\r\n      const roomId = utils.getQueryParameter(\"roomId\");\r\n      router.push(`/?redirectRoomId=${roomId}`)\r\n    } else {\r\n      roomService.attachWsToRoom((room: Room) => {\r\n        this.votes = Object.values(room.votes);\r\n        this.showCards = room.showCards;\r\n      });\r\n    }\r\n  }\r\n})\r\n\r\n</script>\r\n\r\n<template>\r\n  <div class=\"room-container\">\r\n    <div class=\"room-container__table\">\r\n      <Table :votes=\"votes\" :show-cards=\"showCards\"></Table>\r\n    </div>\r\n    <div class=\"room-container__card-board\">\r\n      <CardBoard @throwCard=\"throwCard\"></CardBoard>\r\n    </div>\r\n    <div class=\"room-container__score-board\">\r\n      <ScoreBoard :votes=\"votes\" :show-cards=\"showCards\" @clearCards=\"clearCards\" @flipCards=\"flipCards\"></ScoreBoard>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n\r\n<style scoped>\r\n\r\n.room-container {\r\n  display: grid;\r\n  grid-template-areas:\r\n    \"A C\"\r\n    \"B B\";\r\n  align-items: center;\r\n  grid-gap: 10px;\r\n  grid-template-rows: auto 350px;\r\n  grid-template-columns: auto 200px;\r\n\r\n  margin: 10px;\r\n  height: calc(100vh - 20px);\r\n  min-width: 1000px;\r\n}\r\n\r\n.room-container__table {\r\n  grid-area: A;\r\n  height: 100%;\r\n  overflow: hidden;\r\n}\r\n\r\n.room-container__card-board {\r\n  grid-area: B;\r\n  height: 100%;\r\n  overflow: hidden;\r\n}\r\n\r\n.room-container__score-board {\r\n  grid-area: C;\r\n  height: 100%;\r\n  overflow: hidden;\r\n}\r\n\r\n</style>\r\n","<script lang=\"ts\">\r\n\r\nimport {defineComponent} from \"vue\";\r\nimport Card from \"@/modules/room/components/card/Card.vue\";\r\nimport {roomService} from \"@/modules/room/room.service\";\r\nimport ScoreBoard from \"@/modules/room/components/scoreboard/ScoreBoard.vue\";\r\nimport Table from \"@/modules/room/components/table/Table.vue\";\r\nimport CardBoard from \"@/modules/room/components/CardBoard.vue\";\r\nimport type {Room} from \"@/modules/room/room.model\";\r\nimport type {Vote} from \"@/modules/room/room.model\";\r\nimport router from \"@/views/router\";\r\nimport utils from \"@/utils\";\r\n\r\nexport default defineComponent({\r\n  components: {CardBoard, Table, ScoreBoard, Card},\r\n\r\n  data() {\r\n    return {\r\n      votes: [] as Vote[],\r\n      showCards: false,\r\n    }\r\n  },\r\n\r\n  methods: {\r\n    throwCard: function (cardValue: number | string) {\r\n      roomService.throwCard(cardValue);\r\n    },\r\n    clearCards: function () {\r\n      roomService.clearCards();\r\n    },\r\n    flipCards: function () {\r\n      roomService.flipCards();\r\n    }\r\n  },\r\n\r\n  mounted(): void {\r\n    const userName = roomService.getUserName();\r\n    if (!userName) {\r\n      const roomId = utils.getQueryParameter(\"roomId\");\r\n      router.push(`/?redirectRoomId=${roomId}`)\r\n    } else {\r\n      roomService.attachWsToRoom((room: Room) => {\r\n        this.votes = Object.values(room.votes);\r\n        this.showCards = room.showCards;\r\n      });\r\n    }\r\n  }\r\n})\r\n\r\n</script>\r\n\r\n<template>\r\n  <div class=\"room-container\">\r\n    <div class=\"room-container__table\">\r\n      <Table :votes=\"votes\" :show-cards=\"showCards\"></Table>\r\n    </div>\r\n    <div class=\"room-container__card-board\">\r\n      <CardBoard @throwCard=\"throwCard\"></CardBoard>\r\n    </div>\r\n    <div class=\"room-container__score-board\">\r\n      <ScoreBoard :votes=\"votes\" :show-cards=\"showCards\" @clearCards=\"clearCards\" @flipCards=\"flipCards\"></ScoreBoard>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n\r\n<style scoped>\r\n\r\n.room-container {\r\n  display: grid;\r\n  grid-template-areas:\r\n    \"A C\"\r\n    \"B B\";\r\n  align-items: center;\r\n  grid-gap: 10px;\r\n  grid-template-rows: auto 350px;\r\n  grid-template-columns: auto 200px;\r\n\r\n  margin: 10px;\r\n  height: calc(100vh - 20px);\r\n  min-width: 1000px;\r\n}\r\n\r\n.room-container__table {\r\n  grid-area: A;\r\n  height: 100%;\r\n  overflow: hidden;\r\n}\r\n\r\n.room-container__card-board {\r\n  grid-area: B;\r\n  height: 100%;\r\n  overflow: hidden;\r\n}\r\n\r\n.room-container__score-board {\r\n  grid-area: C;\r\n  height: 100%;\r\n  overflow: hidden;\r\n}\r\n\r\n</style>\r\n"],"names":["_sfc_main$6","defineComponent","newValue","oldValue","animationClass","element","_sfc_render","_ctx","_cache","$props","$setup","$data","$options","_openBlock","_createElementBlock","_normalizeClass","_createElementVNode","_normalizeStyle","_sfc_main$5","_createCommentVNode","_sfc_main$4","User","vote","tmp","average","acc","_withScopeId","n","_pushScopeId","_popScopeId","_resolveComponent","_hoisted_1","$event","_toDisplayString","_Fragment","_renderList","index","_hoisted_2","_createVNode","_component_User","_hoisted_3","_sfc_main$3","Card","el","i","_hoisted_8","_hoisted_9","_createBlock","_hoisted_4","_hoisted_5","_hoisted_6","_component_Card","_hoisted_7","avCards","_sfc_main$2","card","_sfc_main$1","CardBoard","Table","ScoreBoard","cardValue","roomService","room","roomId","utils","router","_component_Table","_component_CardBoard","_component_ScoreBoard"],"mappings":"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"}